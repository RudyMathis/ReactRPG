/* End of Round */

.end-of-round-container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: var(--high-layer)
}

.end-of-round {
    display: flex; 
    flex-direction: column; 
    align-items: center; 
    justify-content: center; 
    gap: .5rem;
}

/* Grid */

.board {
    display: grid;
    position: relative;
    grid-template-columns: repeat(20, 1fr);
    background-size: var(--width) var(--height);
    width: var(--width);
    height: var(--height);
    image-rendering: pixelated;
    border-radius: 5%;
}

.board[data-background="Cave"] {
    background-image: url('/assets/backgrounds/Cave.png');
}
.board[data-background="City"] {
    background-image: url('/assets/backgrounds/City.png');
}
.board[data-background="Desert"] {
    background-image: url('/assets/backgrounds/Desert.png');
}
.board[data-background="Field"] {
    background-image: url('/assets/backgrounds/Field.png');
}
.board[data-background="Forest"] {
    background-image: url('/assets/backgrounds/Forest.png');
}
.board[data-background="Snow"] {
    background-image: url('/assets/backgrounds/Snow.png');
}

.square {
    width: 100px;
    height: 100px;
    background-color: lightgray;
    border: 1px solid darkgray;
}

.character-sprite {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100px;
    background-color: transparent;
    position: relative;
}

.entity-container:hover {
    cursor: pointer;
}

.detail-screen-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.5); 
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: var(--high-layer); 
    cursor: pointer;
}

.detail-screen-content {
    padding: 20px;
    border-radius: 12px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    z-index: var(--highest-layer); 
}

.begin {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: var(--mid-layer);
    box-shadow: 2px 8px 2px rgba(0, 0, 0, 0.75);
    animation: floatButton .9s ease-in-out infinite
}

@keyframes floatButton {
    0%, 100% { transform: translate(-50%, 0%); }
    50% { transform: translate(-50%, -5%); }
}

/* Level Layout */

.level-layout {
    display: flex;
    flex-direction: column;
    position: relative;
}

.top-bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: absolute;
    width: calc(var(--width) - 5%);
    top: 5%;
    left: 50%;
    transform: translateX(-50%);
    z-index: var(--highest-layer);
}

.current-display-container {
    display: flex;
    flex-direction: column;
    gap: 1rem
}