.entityContainer {
    display: flex;
    position: relative;
    flex-direction: column;
    align-items: center;
    justify-content: end;
    gap: 0.5em;
    width: 7em;
    height: 9em;
}

.entityContainer:hover {
    cursor: pointer;
}

.entityContainer[data-attacking='true'][data-type='player'] {
    z-index: var(--high-layer);
    animation: attackMoveAnimation 900ms linear 1; 
} 

@keyframes attackMoveAnimation {
    0% { transform: translateX(0); }
    50% { transform: translateX(14.3em); }
    100% { transform: translateX(0); } 
}

.entityContainer[data-defending='true'][data-type='player'] {
    animation: defendMoveAnimation 900ms linear 1; 
} 

@keyframes defendMoveAnimation {
    0% { transform: translateX(0); }
    50% { transform: translateX(7.3em); }
    100% { transform: translateX(0); } 
}

.entityContainer[data-attacking='true'][data-type='npc'] {
    animation: attackNPCMoveAnimation 900ms linear 1 reverse; 
}

@keyframes attackNPCMoveAnimation {
    0% { transform: translateX(0); }
    25% { transform: translateX(-2em); }
    50% { transform: translateX(.5em); }
    75% { transform: translateX(-1em); }
    100% { transform: translateX(0); } 
}

.entityInfoContainer {
    position: absolute;
    top: -5em;
    left: 0;
    z-index: var(--mid-layer);
    width: 100%;
}

.entityInfoContainer[data-size='small'] {
    top: -5em;
}

.entityInfoContainer[data-size='medium'] {
    top: -8.5em;
}

.entityInfoContainer[data-size='large'] {
    top: -9em;
}

.entityContainer[data-is-player-dead='true'] {
    cursor: not-allowed;
}

[data-dead='true'][data-type='npc'] {
    animation: deathNPCAnimation 900ms linear forwards;
    animation-delay: 1000ms;
}

@keyframes deathNPCAnimation {
    0% { filter: blur(0) grayscale(0); opacity: 1;}
    33% { filter: blur(3px) grayscale(.3); opacity: 1;}
    66% { filter: blur(6px) grayscale(.6); opacity: 1;}
    99% { filter: blur(10px) grayscale(1); opacity: 0} 
	100% {visibility: hidden;}
}

.debuffs {
    display: flex;
    width: 4.4em;
    margin-top: 2px;
    flex-wrap: wrap;
}

.debuffIcon {
    width: 1.2rem;
    height: 1.2rem;
    object-fit: contain;
    image-rendering: pixelated;
}
